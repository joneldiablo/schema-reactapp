{"version":3,"sources":["../src/js/controller.jsx"],"names":["Controller","mapRoutes","props","schema","routes","allRoutes","getRoutes","item","Array","isArray","map","a","resolveRefs","toReturn","Object","keys","forEach","k","assign","substring","split","pop","data","reduce","obj","key","type","from","Component","components","LoadingComponent","ErrorComponent","pageId","page","id","content","ThisPage","Page","ThisSection","Section","i","c","j","templateId","children","template","ThisTemplate","Template","allowChildren","parent","schemaItem","getThisPaths","thisRoutes","r","path","p","exact","transition","absPath","flat","childrenRoutes","pages","templates","state","React","RouterController","RController","BrowserRouterController","HashRouterController"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  HashRouter,\n  BrowserRouter,\n  withRouter,\n  Route,\n} from \"react-router-dom\";\nimport { AnimatedSwitch } from 'react-router-transition';\nimport importedComponent from 'react-imported-component';\nimport urlJoin from \"url-join\";\n\nimport { setSchema } from \"./functions\";\nimport mapRoutes from \"./map-routes\";\nimport Template from \"./containers/template\";\nimport Page from \"./containers/page\";\nimport Section from \"./containers/section\";\nimport getTransition from \"./transitions\";\n\nexport default class Controller extends React.Component {\n\n  static defaultProps = {\n    schema: { routes: [] },\n    components: {},\n    Template,\n    Page,\n    Section\n  }\n\n  state = {\n    mapRoutes: mapRoutes(this.props.schema.routes),\n    allRoutes: this.getRoutes(this.props.schema.routes)\n  }\n\n  resolveRefs(item) {\n    if (Array.isArray(item)) {\n      return item.map(a => this.resolveRefs(a));\n    } else if (typeof item === 'object') {\n      let toReturn = {};\n      Object.keys(item)\n        .forEach(k => {\n          if (k === 'ref') {\n            Object.assign(toReturn, this.resolveRefs(item[k]));\n            toReturn['name'] = item[k].substring(1).split('.').pop();\n          } else if (k === 'attributes') {\n            toReturn[k] = Object.assign({}, toReturn[k] || {}, this.resolveRefs(item[k]));\n          }\n          else toReturn[k] = this.resolveRefs(item[k])\n        });\n      return toReturn;\n    } else if (typeof item === 'string' && item[0] === '$') {\n      let { schema } = this.props;\n      let keys = item.substring(1).split('.');\n      let data = keys.reduce((obj, key) => obj[key], schema);\n      return this.resolveRefs(data);\n    } else return item;\n  }\n\n  components({ type, from } = {}) {\n    let Component =\n      this.props.components[type] ||\n      importedComponent(() => {\n        // use the template string (`...`) because \"import\" \n        // function not working with variables\n        return import(`${type || from}`);\n      }, {\n        LoadingComponent: () => 'loading',\n        ErrorComponent: () => 'error'\n      })\n    return withRouter(Component);\n  }\n\n  componentWillMount() {\n    setSchema(this.props.schema);\n  }\n\n  pages(pageId) {\n    let page = this.resolveRefs(pageId) || [];\n    if (!page.id) page.id = pageId.split('.').pop();\n    let { content } = page;\n    if (Array.isArray(page)) content = page;\n    let ThisPage = this.props.Page;\n    let ThisSection = this.props.Section;\n    return <ThisPage {...page}>\n      {content.map((item, i) =>\n        typeof item === 'object' ?\n          <ThisSection key={i} {...item} Component={this.components(item)} >\n            {Array.isArray(item.content) && item.content.map((c, j) =>\n              typeof c === 'object' ?\n                <ThisSection key={j} {...c} Component={this.components(c)} /> : c\n            )}\n          </ThisSection> : item\n      )}\n    </ThisPage>\n  }\n\n  templates(templateId, children) {\n    let template = this.resolveRefs(templateId) || [];\n    let { content } = template;\n    if (Array.isArray(template)) content = template;\n    let ThisTemplate = this.props.Template;\n    let ThisSection = this.props.Section;\n    return <ThisTemplate {...template}>\n      {content.map((item, i) => <ThisSection key={i} {...item} Component={this.components(item)} >\n        {item.allowChildren && children}\n      </ThisSection>)}\n    </ThisTemplate>\n  }\n\n  getRoutes(schema, parent = '/', key) {\n    let type = Array.isArray(schema) ? 'array' : typeof schema;\n    switch (type) {\n      case 'array': {\n        return schema.map((schemaItem, i) => this.getRoutes(schemaItem, parent, i));\n      }\n      case 'object': {\n        const getThisPaths = (thisRoutes) => {\n          return thisRoutes.map(r => {\n            if (!r.path)\n              return getThisPaths(r.children);\n            if (Array.isArray(r.path)) {\n              return r.path.map(p => urlJoin(parent, p));\n            }\n            return urlJoin(parent, r.path || '')\n          });\n        }\n        let { template, content, children, path, exact, transition } = schema;\n        let absPath = Array.isArray(path) ?\n          path.map(p => urlJoin(parent, p))\n          : urlJoin(parent, path || '/');\n        let props = {\n          path: path ? absPath : getThisPaths(children).flat(),\n          key,\n          exact\n        }\n        let childrenRoutes = <>\n          {content && this.pages(content)}\n          {children && <AnimatedSwitch {...getTransition(transition)}>\n            {this.getRoutes(children, absPath)}\n          </AnimatedSwitch>}\n        </>;\n        return <Route {...props} >\n          {template ?\n            this.templates(template, childrenRoutes) :\n            childrenRoutes\n          }\n        </Route>\n      }\n      default:\n        throw 'Invalid type: ' + type;\n    }\n  }\n\n  render() {\n    return this.state.allRoutes;\n  }\n}\n\nexport const RouterController = (props) => {\n  let RController = withRouter(Controller);\n  return (<RController {...props} />);\n}\n\nexport const BrowserRouterController = (props) => {\n  let RController = withRouter(Controller);\n  return (<BrowserRouter><RController {...props} /></BrowserRouter>);\n}\n\nexport const HashRouterController = (props) => {\n  let RController = withRouter(Controller);\n  return (<HashRouter><RController {...props} /></HashRouter>);\n}"],"file":"controller.js"}