{"version":3,"sources":["../../src/js/containers/template.jsx"],"names":["Template","constructor","name","props","style","className","useGrid","children","split","push","Array","from","Set","id","join","row","map","c","i","columns","React","Component"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEqBA,Q;;;;;;;;;;;;;;;;yDAOd,MAAKC,WAAL,CAAiBC,IAAjB,GAAwB,GAAxB,GAA8B,0B;;;;;;;6BAW1B;AAAA,wBACuC,KAAKC,KAD5C;AAAA,UACDC,KADC,eACDA,KADC;AAAA,UACMC,SADN,eACMA,SADN;AAAA,UACiBC,OADjB,eACiBA,OADjB;AAAA,UAC0BC,QAD1B,eAC0BA,QAD1B;AAEP,UAAI,OAAOF,SAAP,KAAqB,QAAzB,EAAmCA,SAAS,GAAGA,SAAS,CAACG,KAAV,CAAgB,GAAhB,CAAZ;AACnCH,MAAAA,SAAS,CAACI,IAAV,CAAe,KAAKR,WAAL,CAAiBC,IAAhC;AACAG,MAAAA,SAAS,GAAGK,KAAK,CAACC,IAAN,CAAY,IAAIC,GAAJ,CAAQP,SAAR,CAAZ,CAAZ;AACA,0BAAO;AAAK,QAAA,EAAE,EAAE,KAAKQ,EAAd;AAAkB,QAAA,SAAS,EAAER,SAAS,CAACS,IAAV,CAAe,GAAf,CAA7B;AAAkD,QAAA,KAAK,EAAEV;AAAzD,SACJ,CAAC,CAACE,OAAF,GACC,KAAKA,OADN,GAECC,QAHG,CAAP;AAKD;;;wBAnBa;AAAA,yBACgB,KAAKJ,KADrB;AAAA,UACNG,OADM,gBACNA,OADM;AAAA,UACGC,QADH,gBACGA,QADH;AAEZ,0BAAQ;AAAK,QAAA,SAAS,EAAE,SAASD,OAAO,CAACS;AAAjC,SACLR,QAAQ,CAACS,GAAT,CAAa,UAACC,CAAD,EAAIC,CAAJ;AAAA,4BACZ;AAAK,UAAA,GAAG,EAAEA,CAAV;AAAa,UAAA,SAAS,EAAE,SAASZ,OAAO,CAACa,OAAR,CAAgBD,CAAhB,EAAmBb,SAApD;AACE,UAAA,KAAK,EAAEC,OAAO,CAACa,OAAR,CAAgBD,CAAhB,EAAmBd;AAD5B,WACoCa,CADpC,CADY;AAAA,OAAb,CADK,CAAR;AAKD;;;;EAhBmCG,kBAAMC,S;;;;gBAAvBrB,Q,kBAEG;AACpBK,EAAAA,SAAS,EAAE,EADS;AAEpBD,EAAAA,KAAK,EAAE;AAFa,C","sourcesContent":["import React from \"react\";\nimport { randomS4 } from \"../functions\";\n\nexport default class Template extends React.Component {\n\n  static defaultProps = {\n    className: [],\n    style: {}\n  }\n\n  id = this.constructor.name + '-' + randomS4();\n\n  get useGrid() {\n    let { useGrid, children } = this.props;\n    return (<div className={'row ' + useGrid.row}>\n      {children.map((c, i) =>\n        <div key={i} className={\"col \" + useGrid.columns[i].className}\n          style={useGrid.columns[i].style}>{c}</div>)}\n    </div>);\n  }\n\n  render() {\n    let { style, className, useGrid, children } = this.props;\n    if (typeof className === 'string') className = className.split(' ');\n    className.push(this.constructor.name);\n    className = Array.from((new Set(className)));\n    return <div id={this.id} className={className.join(' ')} style={style}>\n      {!!useGrid ?\n        this.useGrid :\n        children}\n    </div>\n  }\n}"],"file":"template.js"}