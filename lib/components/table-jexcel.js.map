{"version":3,"sources":["../../src/js/components/table-jexcel.jsx"],"names":["TableJexcel","props","jexcel","insertRow","tableInstance","cell","col","row","val","id","rowRenderActions","img","innerHTML","width","height","table","getElementsByClassName","j","style","e","preventDefault","console","log","history","push","window","open","deleteRow","tableRef","React","createRef","pathname","location","instance","constructor","name","w","offsetWidth","opts","url","nestedHeaders","columns","freezeColumns","tableOverflow","updateTable","tableWidth","lazyLoading","current","loadTable","eventEmitter","subscribe","closestId","onResize","unsubscribe","rowData","getRowData","div","document","createElement","ReactDom","render","rowOpenView","rowGotoEdit","rowDelete","appendChild","addRow","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport jexcel from \"jexcel\";\nimport eventEmitter from \"../event-emitter\";\nimport Icons from \"../icons\";\n\nexport default class TableJexcel extends React.Component {\n\n  static defaultProps = {\n    url: '',\n    nestedHeaders: null,\n    columns: null\n  }\n\n  constructor(props) {\n    super(props);\n    this.tableRef = new React.createRef();\n    let { pathname } = props.location;\n    this.instance = pathname + this.constructor.name;\n  }\n\n  addRow = () => {\n    this.jexcel.insertRow();\n  }\n\n  updateTable = (tableInstance, cell, col, row, val, id) => {\n    if (col === 0) {\n      this.rowRenderActions(cell, row, val);\n    }\n    if (col === 2) {\n      if (!val) return;\n      let img = (`<img src=${val} style=\"height: 40px; width: 100%; object-fit: cover\" />`);\n      cell.innerHTML = img;\n    }\n  }\n\n  onResize = ({ width, height }) => {\n    if (!this.table) return;\n    let [j] = this.table.getElementsByClassName('jexcel_content');\n    if (!j) return;\n    j.style.width = width + 'px';\n    //j.style.maxHeight = height + 'px';\n  }\n\n  rowGotoEdit = (e, id) => {\n    e.preventDefault();\n    console.log(id);\n    this.props.history.push('/catalogo/' + id);\n  }\n\n  rowOpenView = (e, id) => {\n    e.preventDefault();\n    window.open('https://google.com', '_blank');\n  }\n\n  rowDelete = (e) => {\n    e.preventDefault();\n    this.jexcel.deleteRow();\n  }\n\n  loadTable() {\n    let w = this.table.offsetWidth - 2;\n    let opts = {\n      url: this.props.url,\n      nestedHeaders: this.props.nestedHeaders,\n      columns: this.props.columns,\n      freezeColumns: 2,\n      tableOverflow: true,\n      updateTable: this.updateTable,\n      tableWidth: w + 'px',\n      lazyLoading: true\n    };\n    this.jexcel = jexcel(this.table, opts);\n  }\n\n  componentDidMount() {\n    this.table = this.tableRef.current;\n    this.loadTable();\n    eventEmitter.subscribe('resize-' + this.props.closestId, this.onResize, this.instance);\n  }\n\n  componentWillUnmount() {\n    eventEmitter.unsubscribe('resize-' + this.props.closestId, this.instance);\n  }\n\n  rowRenderActions(cell, row, val) {\n    let rowData = this.jexcel.getRowData(row);\n    let div = document.createElement('div');\n    ReactDom.render(<div>\n      {val}\n      <div className=\"my-2\">\n        <a href=\"#\" onClick={(e) => this.rowOpenView(e, rowData[0])} className=\"link-info\">\n          <Icons icon=\"eye\" className=\"mr-2\" />\n        </a>\n        <a href=\"#\" onClick={(e) => this.rowGotoEdit(e, rowData[0])}>\n          <Icons icon=\"pencil-square-o\" className=\"mr-2\" />\n        </a>\n        <a href=\"#\" onClick={(e) => this.rowDelete(e)} className=\"link-danger\">\n          <Icons icon=\"trash\" />\n        </a>\n      </div>\n    </div>, div);\n    cell.innerHTML = null;\n    cell.appendChild(div);\n  }\n\n  render() {\n    return (\n      <div>\n        <div ref={this.tableRef}></div>\n        <br /><br />\n        <input type='button' value='Add new row' onClick={() => this.addRow()}></input>\n      </div>\n    );\n  }\n}\n"],"file":"table-jexcel.js"}