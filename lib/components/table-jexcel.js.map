{"version":3,"sources":["../../src/js/components/table-jexcel.jsx"],"names":["TableJexcel","props","el","insertRow","wrapper","React","createRef","instance","cell","col","row","val","id","innerHTML","label","w","current","offsetWidth","opts","Object","assign","options","updateTable","tableWidth","setTimeout","console","log","content","addRow","Component","url","freezeColumns","nestedHeaders","title","colspan","columns","name","type","width","tableOverflow"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport jexcel from \"jexcel\";\n\nexport default class TableJexcel extends React.Component {\n\n  static defaultProps = {\n    options: {\n      url: 'https://my.api.mockaroo.com/products?key=30283510',\n      //data: [[], [], [], [], []],\n      freezeColumns: 2,\n      nestedHeaders: [\n        [\n          {},\n          { title: 'Descripción del Producto o Servicio', colspan: 7 },\n          { title: 'Datos de venta', colspan: 7 },\n        ],\n      ],\n      columns: [\n        {\n          name: 'available',\n          title: 'Visible',\n          type: 'checkbox',\n          width: 60\n        },\n        {\n          name: 'img',\n          title: 'Imagen',\n          type: 'text',\n          width: 120\n        },\n        {\n          name: 'gallery',\n          title: 'Galería',\n          type: 'text',\n          width: 120\n        },\n        {\n          name: 'name',\n          title: 'Nombre',\n          type: 'text',\n          width: 250\n        },\n        {\n          name: 'path',\n          title: 'Ruta',\n          type: 'text',\n          width: 200\n        },\n        {\n          name: 'description',\n          title: 'Descripción',\n          type: 'text',\n          width: 400\n        },\n        {\n          name: 'category',\n          title: 'Categoría',\n          type: 'text',\n          width: 120\n        },\n        {\n          name: 'tags',\n          title: 'Etiquetas',\n          type: 'text',\n          width: 120\n        },\n        {\n          name: 'price',\n          title: 'Precio',\n          type: 'numeric',\n          width: 80\n        },\n        {\n          name: 'priceSale',\n          title: 'Oferta',\n          type: 'numeric',\n          width: 80\n        },\n        {\n          name: 'unit',\n          title: 'Unidad',\n          type: 'text',\n          width: 80\n        },\n        {\n          name: 'min',\n          title: 'Mínimo',\n          type: 'numeric',\n          width: 80\n        },\n        {\n          name: 'max',\n          title: 'Máximo',\n          type: 'numeric',\n          width: 80\n        },\n        {\n          name: 'step',\n          title: 'Incremento',\n          type: 'numeric',\n          width: 100\n        },\n        {\n          name: 'discounts',\n          title: 'Descuentos',\n          type: 'text',\n          width: 100\n        },\n        {\n          name: 'id',\n          title: 'ID',\n          type: 'hidden'\n        },\n        {\n          name: 'categoryId',\n          title: 'ID de categoría',\n          type: 'hidden'\n        }\n      ],\n      tableOverflow: true,\n      tableWidth: '900px'\n    },\n  }\n\n  constructor(props) {\n    super(props);\n    this.wrapper = React.createRef();\n  }\n\n  addRow = () => {\n    this.el.insertRow();\n  }\n\n  updateTable(instance, cell, col, row, val, id) {\n    if (col === 1) {\n      cell.innerHTML = `<img src=\"${val}\" style=\"height: 40px; width:100%; object-fit: cover\">`;\n    }\n    if (col === 6) {\n      cell.innerHTML = val.label;\n    }\n  }\n\n  componentDidMount() {\n    let w = this.wrapper.current.offsetWidth - 2;\n    let opts = Object.assign({}, this.props.options,\n      {\n        updateTable: this.updateTable,\n        tableWidth: w + 'px'\n      });\n    this.el = jexcel(this.wrapper.current, opts);\n    setTimeout(() => {\n      console.log(this.el.content);\n    }, 1000);\n  }\n\n  render() {\n    return (\n      <div>\n        <div ref={this.wrapper}></div>\n        <br /><br />\n        <input type='button' value='Add new row' onClick={() => this.addRow()}></input>\n      </div>\n    );\n  }\n}\n"],"file":"table-jexcel.js"}